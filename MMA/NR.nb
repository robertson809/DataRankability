(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     67796,       1370]
NotebookOptionsPosition[     66424,       1340]
NotebookOutlinePosition[     66779,       1356]
CellTagsIndexPosition[     66736,       1353]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"lsEigenvalue", "[", "H_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "emax", ",", "emaxspace", ",", "emin", ",", "eminspace", ",", "es"}], 
      "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
      "Find", " ", "the", " ", "largest", " ", "and", " ", "smallest", " ", 
       "eigenvalue", " ", "of", " ", "a", " ", "Hermitian", " ", "matrix", 
       " ", "H", " ", "together", " ", "with", " ", "the", " ", 
       "corresponding", " ", "eigenspace", " ", 
       RowBox[{"(", 
        RowBox[{"naive", " ", "implementation"}], ")"}]}], "*)"}], 
     RowBox[{
      RowBox[{"es", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{
         RowBox[{"Eigenvalues", "[", "H", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Re", "[", "#1", "]"}], "<", 
           RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"emin", "=", 
       RowBox[{"First", "[", "es", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"emax", "=", 
       RowBox[{"Last", "[", "es", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eminspace", "=", 
       RowBox[{"Orthogonalize", "[", 
        RowBox[{"NullSpace", "[", 
         RowBox[{"H", "-", 
          RowBox[{"emin", "*", 
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"Length", "[", "H", "]"}], "]"}]}]}], "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"emaxspace", "=", 
       RowBox[{"Orthogonalize", "[", 
        RowBox[{"NullSpace", "[", 
         RowBox[{"H", "-", 
          RowBox[{"emax", "*", 
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"Length", "[", "H", "]"}], "]"}]}]}], "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"emin", ",", "eminspace"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"emax", ",", "emaxspace"}], "}"}]}], "}"}], "]"}]}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"plotNR", "[", 
   RowBox[{"A_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t", "=", "0."}], ",", 
      RowBox[{"td", "=", 
       RowBox[{"2", " ", 
        RowBox[{"\[Pi]", "/", "n"}]}]}], ",", "Ht", ",", "Kt", ",", 
      RowBox[{"points", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"segments", "=", 
       RowBox[{"{", "}"}]}], ",", "emax", ",", "emaxspace", ",", "emin", ",", 
      "eminspace", ",", "vp", ",", "vm", ",", "Q", ",", "R"}], "}"}], ",", 
    RowBox[{
     RowBox[{"PrintTemporary", "[", 
      RowBox[{"ProgressIndicator", "[", 
       RowBox[{
        RowBox[{"Dynamic", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"data", " ", "for", " ", "numeric", " ", "range", " ", "plot"}],
       "*)"}], 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"t", "<", 
        RowBox[{"2", " ", "\[Pi]"}]}], ",", 
       RowBox[{
        RowBox[{"Ht", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "I"}], " ", "t"}], "]"}], "*", "A"}], "+", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"I", " ", "t"}], "]"}], "*", 
             RowBox[{"ConjugateTranspose", "[", "A", "]"}]}]}], ")"}], "/", 
          "2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"emax", ",", "emaxspace"}], "}"}], "=", 
         RowBox[{"Last", "[", 
          RowBox[{"lsEigenvalue", "[", "Ht", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", 
         RowBox[{"(*", 
          RowBox[{"One", " ", "dimensional", " ", "eigenspace"}], "*)"}], 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "emaxspace", "]"}], "\[Equal]", "1"}], ",", 
          
          RowBox[{
           RowBox[{"vp", "=", 
            RowBox[{"First", "[", "emaxspace", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"points", ",", 
             RowBox[{
              RowBox[{"Conjugate", "[", "vp", "]"}], ".", "A", ".", "vp"}]}], 
            "]"}]}], ",", 
          RowBox[{"(*", 
           RowBox[{"Two", " ", "or", " ", "greater", " ", 
            RowBox[{"dimension", "--"}], " ", "almost", " ", "does", " ", 
            "not", " ", 
            RowBox[{"happen", "?"}]}], "*)"}], 
          RowBox[{
           RowBox[{"Length", "[", "emaxspace", "]"}], ">", "1"}], ",", 
          RowBox[{
           RowBox[{"Kt", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "I"}], " ", "t"}], "]"}], "*", "A"}], "-", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"I", " ", "t"}], "]"}], "*", 
                RowBox[{"ConjugateTranspose", "[", "A", "]"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"2", " ", "I"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"Q", "=", 
            RowBox[{"Transpose", "[", "emaxspace", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"R", "=", 
            RowBox[{
             RowBox[{"ConjugateTranspose", "[", "Q", "]"}], ".", "Kt", ".", 
             "Q"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"emin", ",", "eminspace"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"emax", ",", "emaxspace"}], "}"}]}], "}"}], "=", 
            RowBox[{"lsEigenvalue", "[", "R", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"vp", "=", 
            RowBox[{"Q", ".", 
             RowBox[{"First", "[", "emaxspace", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"vm", "=", 
            RowBox[{"Q", ".", 
             RowBox[{"First", "[", "eminspace", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"segments", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Conjugate", "[", "vm", "]"}], ".", "A", ".", "vm"}], 
               ",", 
               RowBox[{
                RowBox[{"Conjugate", "[", "vp", "]"}], ".", "A", ".", 
                "vp"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"(*", "Fail", "*)"}], "True", ",", 
          RowBox[{"Print", "[", "\"\<Error\>\"", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"t", "=", 
         RowBox[{"t", "+", "td"}]}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", "points", "]"}], ",", 
        RowBox[{"DeleteDuplicates", "[", "segments", "]"}]}], "}"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.767975736137136*^9, 3.767975752255838*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"3e0c114b-71b6-4904-b19d-f7c4f3ebcfe3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"I", " ", "+", "1"}], ",", "  ", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", 
      RowBox[{"2", "I"}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"plotNR", "[", 
      RowBox[{"A", ",", " ", "1000"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Complex", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], ",", " ", 
      RowBox[{"x_Real", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0"}], "}"}]}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "Medium", "]"}]}], "]"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.7679763010586853`*^9, 3.76797630141905*^9}, {
   3.767976642317224*^9, 3.7679766428049717`*^9}, {3.767976746483446*^9, 
   3.76797677957027*^9}, 3.767976828331277*^9, {3.7679768646188498`*^9, 
   3.767976872570818*^9}, {3.76797690418577*^9, 3.7679769235790052`*^9}, 
   3.767977124262754*^9, {3.7679772509724283`*^9, 3.767977420303486*^9}, {
   3.768044106786282*^9, 3.768044127782061*^9}, {3.768044199342094*^9, 
   3.768044201060769*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"18c467c8-703b-4851-8106-652b5f4ad4d7"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "+", "\[ImaginaryI]"}], "4"},
     {"7", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.767977265463822*^9, 3.767977423681712*^9}, {
   3.768044109732328*^9, 3.768044150400878*^9}, 3.768044202919756*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"44cc7d49-fbdb-4dde-88f3-2bff300e87df"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[Medium], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1: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
j9N2b0hyKZNBuclFF0QzJ+Cbu/yVDN/KoFOsV5Zp1yfg+iPTz026I4NcCpR/
90gp4L/Os51mhckgroH707p9CniC3ro5HvtlkEYSc/617wr42UnTI4UOMmiL
BSQYzVbEdqesFHcskEFXSyO6XkYq4gmqV49P15RBrLzhSrsWRVzNvdSjLymD
Wjap5yuCEr4m98FsS6s0ku9SSJGOVcLCl2trv32XRtFfkwiHZiU8GrFa5cQL
aXTP45+29AJlHFXQ8Xz/TWmUKoU8FpxRxofcYw/fOCONDBe3yo5+U8bLvx3O
UaZ+L/JFHy7u5ahg7rsZOM9RGq2XncG6vEUF392hFvBuCXU9IVk2MlEFr3Vx
SRXpSKOTUZ/cPOpV8BP+39EQRWlUcmVfyEIdVcy83F65jk/9fh7hr1ZxU8Xv
2s9eda+WQk7ug/zRG6pYllnkgvOlUNU/b2v2b1X8K73LYOczKaTWlmI2V04N
tx4c7F8TL4UcGl2vndRRw15bLsYEhlC/z738L0IzNUw8dn/Vc0AKJdgYGNx1
UcPVn/yV0zZSv7evfN+c9VHD3A5zvafUd5Isy9j65Kwabt6fdlw4m3pfcdpd
zdtq+EzV2JnTGlLonO7txvIXaviSiddtRzkptKO6dWXbVzX86c8n3T39kujS
3FfJ6+vUsG93y+a3NZIoyufJBy2hGs5bLXnOqVAS1fRfY69VYGLWtpaGWa8l
0WwVdn2zFhPvLtRLWP1AElW2LbboMWHidRPUGhIvSyJJidUGB1YysYnsm/JF
/0mi0tzF4O7MxAbzSxNVfCSRptN+rYo9TBy24/DGqVslkVLwFN2fAUxsVFiq
ddBGEmlMYp2zC2dip+dScsOLJZFoQcd2l2tMvD/6iNG76ZLI/0PexY6HTJy7
NO7+G1IS2emdbmC/YuKjlbahvbKS6ES4pbD4IxNH5bg3bhNKoNDGt1aGpUx8
WkqmXLJZAgVu3rdIu56JywTj/lW/JNAenW7J9G4mFhbP/dP+UQIdrF72qXWU
iVPLC8lZLyWQ8FxB2McJLDy2JHbt3QcSaBfrnoENh4UvPdGJs46TQHrPbxwM
0mFhqakahE64BHKwt2ZvMWZhXeON9YbHJNAHplpyx2IWNiibNH3XPmp/aaP5
yMSChb2EegpfNlPvJ5z+M3RgYUFd/bNtayWQzks4WbWJhZ8m/bd6CkigOKu2
Sit3FpZZKDeqPEcCad3JwL4+LJwz4j5uoCuBjvRMh43HWFh5IDJ0n7oEKrd8
7yJxhoU/tPl9LJOj2m9xh78/koV1Ug2HvIcZqA6t48dfYeF4ybKtRp0MtJvj
PSUmgYWjZnyYx6ploOODtvPWPmThnfY73mmXMNAZ34dlJU9Z+NHsVavW5TOQ
5l+jFP0sFj4mmq6a8pqB3G5pmq7CLJz+vWe/fhoDLZxfOmxSwMKt8QmPPiYy
UMJtV6/OHyzsqr5e+1wsA91XregKLGPhju2rtXzCGejPyrmVFX9ZeM7XfEZA
EHW+4W09qdLMwkTWNP3EgwykrdgzkexkYe7LvLa23QzEMD3TKOhn4WBB17P1
GxnoywcdhdRhFq7V6a6pWstAJvbpqUskCJzP6/0bsoKB/P/YN96VI7CjguRE
m4UMFLwondekTGDNENGIsREDLb96ZpU0m8B206IGZ1PnuRDLLJ/xiQSO2qB+
ei2HgVJZ9ablkwkseeORyllFBpqvE3wmWp/Alw0UySoGA+29b7PMYCaBA6O1
Z13rGAevbf+hWyYENtm3jJNWNg7l5tN3CUwJfP+Gdbsgdxx2kM5+s5cS+Mrt
CU99n4yD+Y39ZraIej9H02dy/Dh84G05YWtB4HKT2sWi0HHAN+r7TNYQOG3e
Nl3lQ+Nwrfa147AdgbtUTFbZUOdhObk/tinrCXxr8r7Xr9aMwyOrpAhzVwK7
aYTcX7dwHIpP6Gdmb6HaM3vFTK4edZ4Wzt2jvYOqz8aEAAXmOOi6J5vtcyew
p+j5q2kiEfh3Rn1L2EvgrR9ua/n8E0Ggj/Wjt94Evv7iRE1NuQj+aL3b/sGX
wFWpsPBYvggGDp/0f3mEwOvU7u5ckimCnzc7D10+RuDJ1ex7OndFMGmz+6/N
Jwh8VubhsjkxIqg9vXGS2n8E9tLtC3Q/KYICIjD7WQiBecGyD995iSBBstTQ
PJzAj/w3MM02i2A+7qnKiqDao5esVG0tgorzfPOp0QRee3KwK3GRCLbEvXkT
cImq/4tDzLPTRBCmJcx+e4XASwZci6I4IjBwWnmn5xqBbcP6z7+Soa572BQR
N6n2G566xxCMwfQj5Q8MblP9PaRxam/jGHRe7QqecZdqv//b0N6SMYiRa3il
mURgBRl1nWt5Y/B476G7jGQCW2dFvN+SMQYblvyO/fWIwH99ppea3xuDxoA/
tTfSCOxqG1q47PIYNId0/Fr/jMAqR3iTN54ZAz/7Re/H0qnxmu1pEXN4DKQ/
POu8/oLAj1f7v6rfNQbalw3uT88i8PmPC/vsncagxMF15qNs6v19K/3KVo3B
Xr5kgXYO1d7H3u+Omo7B83e9b8N4BJ459GL9PIMxaIpUtql/T82/YfPXsuQY
tNza/3zOBwJfUgH/PrkxOPBj86wj+QTOXcsnhIOjYO/qP5xaQOApy69pMdtH
gS2T4vjnC4Fr69dPWVk5CvEjKw8MFxL4ac28xxGFo+CtIBui9oPAzyZq2bfn
jIJD+PTPGj8JHLD/fcK2p6OwqGCfr2YJgeNSYo1bE0chS1/rKesXgS3r3seG
XRoFYdrMDNFvAguKp+xdHDIKTzynp9WWE3jDw5kWDP9RkLJw/ppVQc2nan5e
hccohKWlLTlbReBWH63TBRup+/O7DWz/Ejho7letzzbU/ZuTsuVqCbxg5+0F
VdS+fiTAaHJ2HYGt9qd5S5iMwqZ3vKBdDQTOqfV1X6QzCrJ7Tw5LNVE56fP7
YPYoVCj5vbvRTOBXlm3TKmRHYSo7sdOwlcCZ/zmZrxoaAanB0cfP2wjMHf2V
+u7fCEQtOatp8o/AxvoBmtZ/R2CO7qodDzoI3L7y6MKGohGwQFY32F0Eln5q
lRKZNwIuT3PaA7up+hmf0rZ4OQJBxu0H/vQQOPxM8SqllBHYPzjf0qSPwA80
WF/rboyAmbdR1Kl+Ams0au/4GDUCj89F7PrEp9avZeOrl/+NwC5jqJcTEvjX
6nX/vfAbAebi/frLBwgs92XdwfceI5B70Gf14UECh/R8WlSxaQQmre7YkTBE
YJmk0OjxtSOQ6vPpQu4wgV+YWRrOWT4CDHuThpoRan6YJfMOzB+BkBX3jwlH
CSxhNk0uaxp1f26fh6yImg+N6q+VNEYg0G35B9VxAhuoXYvyUhmBxNuq91kM
NjYW3VxeJjECtk+WaKpKsPFIyp9IW8EwfB5hLJeRZOO4BXkzC1uHoeaJjIGA
ys+OnKtwrhoG5tj6v3+l2LgijOnS9mMYzu7aGZQrzcbno3o2h+UNw7NcdVai
DBurhex5ZPRqGDy3fngWIMvGTM5GRtUj6tz2dtFeazk23nLfTis2YRicAzJt
1OXZuMlu73unS8OQWd/nUUnlz9ydaVphw9CcNPPbjQlsLDk55G7XsWGIX6h+
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
cxI=
       "]]}, {}}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageMargins->0.,
   ImagePadding->All,
   ImageSize->Automatic,
   ImageSizeRaw->Automatic,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-5.022680508593631, 6.022680508593631}, {-0.08113883008418954,
     3.081138830084189}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.767977265463822*^9, 3.767977423681712*^9}, {
   3.768044109732328*^9, 3.768044150400878*^9}, 3.7680442030648623`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"5e330f9a-42b6-490c-bcd2-bee6159fd764"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[AliasDelimiter]", 
  RowBox[{"\[AliasDelimiter]", 
   RowBox[{"\[AliasDelimiter]", "\[AliasDelimiter]"}]}]}]], "Input",
 CellChangeTimes->{{3.768044132642212*^9, 
  3.768044138833961*^9}},ExpressionUUID->"a7e25272-4c1f-4dfe-b31a-\
11b55cf67371"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fval", "[", 
    RowBox[{
     RowBox[{"mat_", "?", "SquareMatrixQ"}], ",", 
     RowBox[{"t_", "?", "NumericQ"}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{
     RowBox[{"Internal`EffectivePrecision", "[", "mat", "]"}], "<", 
     "\[Infinity]"}], "||", 
    RowBox[{"InexactNumberQ", "[", "t", "]"}]}]}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tm", ",", "v"}], "}"}], ",", 
    RowBox[{
     RowBox[{"tm", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "+", 
           RowBox[{"ConjugateTranspose", "[", "#", "]"}]}], ")"}], "/", "2"}],
         "&"}], "[", 
       RowBox[{"mat", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", " ", "t"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Check", "[", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"Eigenvectors", "[", 
           RowBox[{"tm", ",", "1", ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<Arnoldi\>\"", ",", 
               RowBox[{"\"\<Criteria\>\"", "\[Rule]", "\"\<RealPart\>\""}]}], 
              "}"}]}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"MaximalBy", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"Eigensystem", "[", "tm", "]"}], "]"}], ",", "First"}], 
           "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
         RowBox[{"Eigenvectors", "::", "arall"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Conjugate", "[", "v", "]"}], ".", "mat", ".", "v"}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Conjugate", "[", "v", "]"}], ".", "v"}], ")"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.767975937946024*^9, 3.767975937948421*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5e285ef4-4467-480a-bbda-0db589785643"],

Cell[BoxData[
 RowBox[{
  RowBox[{"grcar", "[", 
   RowBox[{
    RowBox[{"r", ":", 
     RowBox[{"_Integer", "?", "Positive"}], ":", "3"}], ",", 
    RowBox[{"n_Integer", "?", "Positive"}]}], "]"}], ":=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j_", ",", "k_"}], "}"}], "/;", 
        RowBox[{"j", "\[Equal]", 
         RowBox[{"k", "+", "1"}]}]}], "\[RuleDelayed]", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j_", ",", "k_"}], "}"}], "/;", 
        RowBox[{"0", "\[LessEqual]", 
         RowBox[{"k", "-", "j"}], "\[LessEqual]", "r"}]}], "\[RuleDelayed]", 
       "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767975973593872*^9, 3.7679759735949583`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ca6776cf-3ca5-4d97-853e-b01198d42b45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"grcar", "[", "32", "]"}]}]], "Input",
 CellChangeTimes->{{3.767975984313142*^9, 3.76797598431424*^9}, 
   3.767976023633706*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"17d3df93-f584-4ac4-88af-e6b5095cef73"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    TagBox["SparseArray",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQgGIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmPipMn
3uEfIP1g3UX7KZcchSuljtlf6I+yfx77zP6I7tEZx+Wv298pWbXfsPOZfd+D
Tp1w1/eDzv1DRZzUcN7ZbeC6c8sL+xvuy9fVTHtrfzIi91/819Hwp1c4n93C
8THr/AV78wsP6u9ufGA/sfZej6Pz20Hn39FwHt7io+E8Gs7DSXw0nEfDeTiJ
j4bzaDgPJ/HRcB4N5+EkPhrOo+E8nMRHw3lgxUfDeWDFAbvNx1o=
               "], {{0, 
               0}, {16, 16}}, {0, 1}], AspectRatio -> 1, Axes -> False, Frame -> 
              False, FrameLabel -> {None, None}, FrameStyle -> Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                Automatic, "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Specified elements: \"", "SummaryItemAnnotation"],
                   "\[InvisibleSpace]", 
                  TagBox["153", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"32", ",", "32"}], "}"}], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQgGIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmPipMn
3uEfIP1g3UX7KZcchSuljtlf6I+yfx77zP6I7tEZx+Wv298pWbXfsPOZfd+D
Tp1w1/eDzv1DRZzUcN7ZbeC6c8sL+xvuy9fVTHtrfzIi91/819Hwp1c4n93C
8THr/AV78wsP6u9ufGA/sfZej6Pz20Hn39FwHt7io+E8Gs7DSXw0nEfDeTiJ
j4bzaDgPJ/HRcB4N5+EkPhrOo+E8nMRHw3lgxUfDeWDFAbvNx1o=
               "], {{0, 
               0}, {16, 16}}, {0, 1}], AspectRatio -> 1, Axes -> False, Frame -> 
              False, FrameLabel -> {None, None}, FrameStyle -> Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                Automatic, "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Specified elements: \"", "SummaryItemAnnotation"],
                   "\[InvisibleSpace]", 
                  TagBox["153", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"32", ",", "32"}], "}"}], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["0", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["0.1494140625`", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"\"", "SummaryItem"]}]}, {
                TagBox[
                 TagBox[
                  GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"], "SummaryItem"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   SparseArray[
   Automatic, {32, 32}, 0, {
    1, {{0, 4, 9, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64, 69, 74, 79, 84, 
      89, 94, 99, 104, 109, 114, 119, 124, 129, 134, 139, 144, 148, 151, 
      153}, {{4}, {3}, {2}, {1}, {3}, {2}, {4}, {5}, {1}, {4}, {6}, {3}, {
      5}, {2}, {3}, {5}, {7}, {6}, {4}, {5}, {7}, {8}, {4}, {6}, {5}, {9}, {
      6}, {8}, {7}, {9}, {7}, {10}, {8}, {6}, {10}, {11}, {9}, {8}, {7}, {
      8}, {9}, {12}, {10}, {11}, {11}, {13}, {12}, {9}, {10}, {12}, {13}, {
      10}, {11}, {14}, {15}, {12}, {11}, {14}, {13}, {12}, {14}, {13}, {16}, {
      15}, {13}, {15}, {16}, {17}, {14}, {15}, {18}, {16}, {17}, {14}, {19}, {
      16}, {15}, {17}, {18}, {17}, {16}, {20}, {19}, {18}, {19}, {20}, {21}, {
      17}, {18}, {20}, {22}, {21}, {19}, {18}, {22}, {20}, {19}, {23}, {21}, {
      22}, {24}, {21}, {20}, {23}, {25}, {24}, {22}, {23}, {21}, {24}, {26}, {
      23}, {25}, {22}, {24}, {23}, {27}, {25}, {26}, {25}, {27}, {28}, {26}, {
      24}, {29}, {25}, {28}, {26}, {27}, {29}, {28}, {27}, {30}, {26}, {28}, {
      29}, {27}, {30}, {31}, {32}, {31}, {29}, {30}, {28}, {30}, {29}, {31}, {
      32}, {30}, {32}, {31}, {31}, {32}}}, CompressedData["
1:eJxTTMoPymNkYGCYCcSMBPB/IMAmhk0cmz5C6qhhByFziJUnxh5i7CQkR8hN
pIoTG9akqiPWf7jUw9gALdd+Sw==
     "]}],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], TraditionalForm]], "Output",
 CellChangeTimes->{3.767976024244645*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"469a1a38-8f0f-44a6-8d32-9774b7fbac3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"ReIm", "[", 
    RowBox[{"fval", "[", 
     RowBox[{"mat", ",", "t"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AbsolutePointSize", "[", "4", "]"}], ",", 
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "2"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"ReIm", "[", "eigs", "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.767975991952443*^9, 3.767975991953477*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"6e051535-f74e-4842-8bde-c6c4c3301524"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
/B9/9NtP
       "]]},
     Annotation[#, "Charting`Private`Tag$6165#1"]& ]},
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     AbsolutePointSize[4], 
     RGBColor[0.880722, 0.611041, 0.142051], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQfWXa9+3ugtvsy4/mmNX8ZnRA4x9w0tfL3fD1gH1O
GGuD/BxGBzT+gZSrisKbDp2y57vcP1ObgdEBjX+g//DyYG6tK/Z/Hc7s8tBh
cEDjH3gwNeyStsQv+9sTfr49qfDJHo2/f8X0lKs3Wn7Z2x7k7ykO+2iPxt8/
h2NmF+PhO/Zd35pP3PP7Z4/G379NSb43KOS7ffSHDdVH736yR+PvZ8ibPGGb
0C/7WRb73t2JfmuPxt/fs/Hkq7Tux/bua7j/W37/bY/G39/XeSzZeM9n+0KR
+vNz+77Yo/H3swtdZitqfWl/bMGKW1V5P+3R+PvrvjetsJf9YH8iW2j6nfvf
7NH4+x+orJ4/f+NP+/3sSl3OzM/s0fj7A4zUt3eX/7QPP767+6fSbXs0/v7u
qL7o5tif9hPsxT85BByyR+PvBwDvkQ0/
      "]]},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"ScalingFunctions" -> None},
   PlotRange->{{-0.5907582068294903, 2.945994999664278}, {-3.088567420411328, 
    3.0885673917169605`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.05], 
      Scaled[0.05]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{3.767975993760715*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"6f055329-77da-4533-a8e2-0c332b1f5433"]
}, Open  ]]
},
WindowSize->{899, 1023},
WindowMargins->{{Automatic, -21}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 7503, 194, 577, "Input",ExpressionUUID->"3e0c114b-71b6-4904-b19d-f7c4f3ebcfe3"],
Cell[CellGroupData[{
Cell[8086, 218, 1516, 39, 73, "Input",ExpressionUUID->"18c467c8-703b-4851-8106-652b5f4ad4d7"],
Cell[9605, 259, 849, 21, 48, "Output",ExpressionUUID->"44cc7d49-fbdb-4dde-88f3-2bff300e87df"],
Cell[10457, 282, 20979, 361, 274, "Output",ExpressionUUID->"5e330f9a-42b6-490c-bcd2-bee6159fd764"]
}, Open  ]],
Cell[31451, 646, 271, 6, 30, "Input",ExpressionUUID->"a7e25272-4c1f-4dfe-b31a-11b55cf67371"],
Cell[31725, 654, 2136, 62, 115, "Input",ExpressionUUID->"5e285ef4-4467-480a-bbda-0db589785643"],
Cell[33864, 718, 980, 28, 52, "Input",ExpressionUUID->"ca6776cf-3ca5-4d97-853e-b01198d42b45"],
Cell[CellGroupData[{
Cell[34869, 750, 254, 5, 30, "Input",ExpressionUUID->"17d3df93-f584-4ac4-88af-e6b5095cef73"],
Cell[35126, 757, 10675, 214, 63, "Output",ExpressionUUID->"469a1a38-8f0f-44a6-8d32-9774b7fbac3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45838, 976, 717, 19, 52, "Input",ExpressionUUID->"6e051535-f74e-4842-8bde-c6c4c3301524"],
Cell[46558, 997, 19850, 340, 449, "Output",ExpressionUUID->"6f055329-77da-4533-a8e2-0c332b1f5433"]
}, Open  ]]
}
]
*)

